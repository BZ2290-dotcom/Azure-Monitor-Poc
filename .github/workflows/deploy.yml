name: Deploy Azure Monitor POC Modules

on:
  push:
    branches: [ main ]

jobs:
  deploy-log-analytics:
    name: Deploy Log Analytics
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform/log_analytics
      
 env:
    TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
    TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
    TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform/log_analytics
      
 env:
    TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
    TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
    TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}

    - name: Terraform Apply
  run: terraform apply -auto-approve
  working-directory: ./terraform/log_analytics
  env:
    TF_VAR_client_id: ${{ secrets.ARM_CLIENT_ID }}
    TF_VAR_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
    TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    TF_VAR_tenant_id: ${{ secrets.ARM_TENANT_ID }}


  deploy-vm:
    name: Deploy VM
    runs-on: ubuntu-latest
    needs: deploy-log-analytics
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform/vm
    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform/vm
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform/vm

  deploy-dcr:
    name: Deploy DCR
    runs-on: ubuntu-latest
    needs: deploy-vm
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform/dcr
    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform/dcr
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform/dcr

  deploy-dcr-association:
    name: Associate DCR with VM
    runs-on: ubuntu-latest
    needs: deploy-dcr
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform/dcr_association
    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform/dcr_association
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform/dcr_association

  deploy-logic-app:
    name: Deploy Logic App
    runs-on: ubuntu-latest
    needs: deploy-dcr-association
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform/logic_app
    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform/logic_app
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform/logic_app

  deploy-alerts:
    name: Deploy Alerts
    runs-on: ubuntu-latest
    needs: deploy-logic-app
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform/alerts
    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform/alerts
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform/alerts

  deploy-dashboard:
    name: Deploy Dashboard
    runs-on: ubuntu-latest
    needs: deploy-alerts
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform/dashboard
    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform/dashboard
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform/dashboard

